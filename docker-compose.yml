---
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: legal_ai_agent_backend
    env_file: .env                          # додаємо файл із змінними оточення
    working_dir: /app
    volumes:
      - ./:/app                             # щоб бутлені зміни коду були доступні
    command:
      - uvicorn
      - services.app:app
      - --host
      - 0.0.0.0
      - --port
      - "8000"
    ports:
      - "8000:8000"    # FastAPI backend
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8000/healthz
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      DATABASE_URL: postgresql://user:pass@db:5432/appdb
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SLACK_API_URL: >
        https://hooks.slack.com/services/XXX/YYY/ZZZ

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: legal_ai_agent
    env_file: .env
    working_dir: /app
    command:
      - python
      - -m
      - streamlit
      - run
      - interface/streamlit_app.py
      - --server.address=0.0.0.0
      - --server.port=8501
    ports:
      - "8501:8501"    # Streamlit UI
      - "8001:8001"    # Prometheus metrics
    volumes:
      - ./:/app
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8001/metrics
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      DATABASE_URL: postgresql://user:pass@db:5432/appdb
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SLACK_API_URL: >
        https://hooks.slack.com/services/XXX/YYY/ZZZ

  db:
    image: postgres:15
    container_name: legal_ai_agent_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alerts.rules.yml:/etc/prometheus/alerts.rules.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - app
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/config.yml:ro
    ports:
      - "9093:9093"
    environment:
      SLACK_API_URL: >
        https://hooks.slack.com/services/XXX/YYY/ZZZ
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: alex1949
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    restart: unless-stopped

volumes:
  db_data:
  grafana_data:
