{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Legal AI Agent","text":"<p>Legal AI Agent \u2014 \u0446\u0435 RAG-\u0441\u0435\u0440\u0432\u0456\u0441 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0456\u0437\u0443 \u044e\u0440\u0438\u0434\u0438\u0447\u043d\u0438\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0456\u0432.</p>"},{"location":"#_1","title":"\u0410\u0440\u0445\u0456\u0442\u0435\u043a\u0442\u0443\u0440\u0430","text":"<ol> <li>Streamlit UI \u2014 \u0432\u0435\u0431-\u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430  </li> <li>FastAPI (\u0437\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438) \u2014 REST-API \u0434\u043b\u044f \u0456\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0456\u0439  </li> <li>Prometheus + Grafana \u2014 \u043c\u043e\u043d\u0456\u0442\u043e\u0440\u0438\u043d\u0433 \u043c\u0435\u0442\u0440\u0438\u043a  </li> <li>PostgreSQL \u2014 \u0437\u0431\u0435\u0440\u0456\u0433\u0430\u043d\u043d\u044f \u0434\u0430\u043d\u0438\u0445  </li> <li>RAGEngine \u2014 Retrieval-Augmented Generation \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d  </li> <li>OpenAI / LLMAgent \u2014 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0435\u0439  </li> </ol> <p>\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0438\u0439 \u043e\u043f\u0438\u0441 \u0434\u0438\u0432. \u0443 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0438\u0445 \u0440\u043e\u0437\u0434\u0456\u043b\u0430\u0445.</p>"},{"location":"ci_cd/","title":"CI / CD","text":"<p>GitHub Actions pipeline \u0441\u043a\u043b\u0430\u0434\u0430\u0454\u0442\u044c\u0441\u044f \u0437 \u0434\u0432\u043e\u0445 \u0435\u0442\u0430\u043f\u0456\u0432:</p> <ol> <li>lint-and-test</li> <li>Install dependencies  </li> <li>Lint (flake8)  </li> <li>Format check (black)  </li> <li>Type check (mypy)  </li> <li>Unit &amp; integration tests (pytest)  </li> <li> <p>Streamlit smoke-test (Playwright)  </p> </li> <li> <p>build-and-push (\u043b\u0438\u0448\u0435 \u043d\u0430 main)  </p> </li> <li>Build multi-stage Docker image  </li> <li>Push \u043d\u0430 Docker Hub  </li> </ol> <p>```yaml jobs:   lint-and-test:     runs-on: ubuntu-latest     steps:       - uses: actions/checkout@v4       - uses: actions/setup-python@v4         with:           python-version: '3.13'       - name: Install dependencies         run: |           python -m pip install --upgrade pip setuptools wheel           pip install -r requirements.txt           pip install -r requirements-dev.txt       - name: Lint         run: flake8 app ingest interface       - name: Format         run: black --check .       - name: Type         run: mypy .       - name: Run tests         run: pytest --maxfail=1 --disable-warnings -q       - name: Smoke-test Streamlit         run: pytest tests/e2e/test_streamlit_smoke.py -q</p> <p>build-and-push:     needs: lint-and-test     if: github.ref == 'refs/heads/main'     runs-on: ubuntu-latest     steps:       - uses: actions/checkout@v4       - uses: docker/login-action@v2         with:           username: ${{ secrets.DOCKERHUB_USERNAME }}           password: ${{ secrets.DOCKERHUB_TOKEN }}       - uses: docker/build-push-action@v4         with:           context: .           push: true           tags: |             ${{ secrets.DOCKERHUB_USERNAME }}/legal_ai_agent:latest             ${{ secrets.DOCKERHUB_USERNAME }}/legal_ai_agent:${{ github.sha }}</p>"},{"location":"deployment/","title":"Deployment","text":""},{"location":"deployment/#multi-stage-docker","title":"Multi-stage Docker","text":"<ul> <li>builder: \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454 \u0432\u0441\u0456 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0456  </li> <li>final: \u043a\u043e\u043f\u0456\u044e\u0454 \u043b\u0438\u0448\u0435 Python-\u043f\u0430\u043a\u0435\u0442\u0438 \u0442\u0430 \u043a\u043e\u0434  </li> <li>\u041f\u043e\u0440\u0442\u0438: 8501 (UI), 8001 (\u043c\u0435\u0442\u0440\u0438\u043a\u0438)</li> </ul> <p>```dockerfile</p>"},{"location":"deployment/#stage-1","title":"Stage 1","text":"<p>FROM python:3.13-slim AS builder ...</p>"},{"location":"deployment/#stage-2","title":"Stage 2","text":"<p>FROM python:3.13-slim ... ENTRYPOINT [\"./start.sh\"]</p>"},{"location":"dev_setup/","title":"Dev Setup","text":"<ol> <li>\u0412\u0456\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u0435 \u043e\u0442\u043e\u0447\u0435\u043d\u043d\u044f    ```bash    python -m venv .venv    source .venv/bin/activate    # Linux/macOS    .venv\\Scripts\\activate       # Windows</li> </ol>"},{"location":"quickstart/","title":"Quickstart","text":""},{"location":"quickstart/#1","title":"1. \u041a\u043b\u043e\u043d\u0443\u0454\u043c\u043e \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0439","text":"<p>```bash git clone https://github.com/yourorg/legal_ai_agent.git cd legal_ai_agent</p>"},{"location":"testing/","title":"Testing","text":""},{"location":"testing/#unit-","title":"Unit-\u0442\u0435\u0441\u0442\u0438","text":"<p>```bash pytest tests/unit -q</p>"}]}