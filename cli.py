#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import argparse
from interface.prozorro_loader import download_documents
from app.full_analysis import analyze_tender


def cmd_get_latest(limit: int):
    """
    –û—Ç—Ä–∏–º—É—î –æ—Å—Ç–∞–Ω–Ω—ñ —Ç–µ–Ω–¥–µ—Ä–∏ (limit —à—Ç—É–∫).
    """
    print(f"üîç –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –æ—Å—Ç–∞–Ω–Ω—ñ {limit} —Ç–µ–Ω–¥–µ—Ä(—ñ–≤)...")
    tenders = [f"UA-XXXX-2025-{i:02d}" for i in range(1, limit + 1)]
    for t in tenders:
        print(f"  ‚Ä¢ {t}")


def cmd_get_tender(tender_id: str):
    """
    –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–æ–∫—É–º–µ–Ω—Ç–∏ —Ç–µ–Ω–¥–µ—Ä—É –∑–∞ ID.
    """
    print(f"üì• –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Ç–µ–Ω–¥–µ—Ä {tender_id}...")
    path = download_documents(tender_id)
    print(f"–î–æ–∫—É–º–µ–Ω—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤: {path}")


def cmd_analyze(tender_id: str):
    """
    –ó–∞–ø—É—Å–∫–∞—î –ø–æ–≤–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Ç–µ–Ω–¥–µ—Ä—É (RAG-–¥–≤–∏–∂–æ–∫).
    """
    print(f"ü§ñ –ê–Ω–∞–ª—ñ–∑—É—é —Ç–µ–Ω–¥–µ—Ä {tender_id}...")
    analyze_tender(tender_id)
    print("–ì–æ—Ç–æ–≤–æ.")


def cmd_run_example():
    """
    –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–æ–≥–æ –ø—Ä–∏–∫–ª–∞–¥—É.
    """
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–∏–∫–ª–∞–¥ ‚Ä¶")
    print("–ü—Ä–∏–∫–ª–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")


def main():
    parser = argparse.ArgumentParser(
        prog="legal-agent",
        description="CLI –¥–ª—è Magilarity Legal AI Agent: –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –∞–Ω–∞–ª—ñ–∑ —Ç–µ–Ω–¥–µ—Ä—ñ–≤",
    )
    sub = parser.add_subparsers(dest="command", required=True)

    sub.add_parser("get-latest", help="–û—Ç—Ä–∏–º–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ —Ç–µ–Ω–¥–µ—Ä–∏").add_argument(
        "--limit",
        "-n",
        type=int,
        default=5,
        help="–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–µ–Ω–¥–µ—Ä—ñ–≤ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 5)",
    )

    sub.add_parser(
        "get-tender", help="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ —Ç–µ–Ω–¥–µ—Ä—É –∑–∞ ID"
    ).add_argument(
        "tender_id", help="–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–µ–Ω–¥–µ—Ä—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ UA-2025-06-09-008224-a"
    )

    sub.add_parser("analyze", help="–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ç–µ–Ω–¥–µ—Ä RAG-–¥–≤–∏–∂–∫–æ–º").add_argument(
        "tender_id", help="ID —Ç–µ–Ω–¥–µ—Ä—É –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É"
    )

    sub.add_parser("run-example", help="–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥")

    args = parser.parse_args()
    if args.command == "get-latest":
        cmd_get_latest(args.limit)
    elif args.command == "get-tender":
        cmd_get_tender(args.tender_id)
    elif args.command == "analyze":
        cmd_analyze(args.tender_id)
    elif args.command == "run-example":
        cmd_run_example()
    else:
        parser.print_help()
        sys.exit(1)


if __name__ == "__main__":
    main()
