name: "CI & Docker Build"
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: legal_agent
          POSTGRES_DB: legal_ai_agent_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -e .
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          # Ensure libraries for integration and unit tests
          pip install faiss-cpu openai asn1crypto requests

      - name: Install Playwright browsers
        run: |
          pip install playwright
          playwright install chromium
          playwright install-deps

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=postgres://legal_agent:password@localhost:5432/legal_ai_agent_db" >> $GITHUB_ENV
          echo "OPENAI_API_KEY=test-key" >> $GITHUB_ENV
          echo "ANTHROPIC_API_KEY=test-key" >> $GITHUB_ENV

      - name: Lint
        run: flake8 services/ app/ --max-line-length=88

      - name: Format check
        run: black --check .

      - name: Type check
        run: mypy app/ services/

      - name: Run unit tests
        run: pytest tests/unit/ -v --tb=short

      - name: Run integration tests  
        run: pytest tests/integration/ -v --tb=short

      - name: Run E2E tests
        run: pytest tests/e2e/test_streamlit_smoke.py -v

      - name: Run all tests with coverage
        run: pytest tests/ -v --cov=app --cov=services --cov-report=xml --maxfail=3

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build-and-push:
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/legal_ai_agent:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/legal_ai_agent:${{ github.sha }}